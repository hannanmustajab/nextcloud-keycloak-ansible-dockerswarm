---
- name: Include secrets file
  include_vars:
    file: "secrets.yml"
    name: secrets

- name: "Create NFS registry directory {{ registry_volume }}"
  ansible.builtin.file:
    path: "{{ registry_volume }}"
    state: directory
  when: inventory_hostname is in groups['swarm-managers']

- name: "Create NFS registry mirror directory {{ registry_cache }}"
  ansible.builtin.file:
    path: "/data/docker-registry-cache"
    state: directory
  when: inventory_hostname is in groups['swarm-managers']

- name: Create config.yml file in the virtual machines for the registry service
  ansible.builtin.template:
    src: config_registry.yml
    dest: "{{ registry_volume }}/config.yml"
  when: inventory_hostname is in groups['swarm-managers']

- name: Create config.yml file in the virtual machines for the registry service
  ansible.builtin.template:
    src: config_cache.yml
    dest: "{{ registry_cache }}/config.yml"
  when: inventory_hostname is in groups['swarm-managers']

- name: Create registry configuration
  community.docker.docker_config:
    name: registry_configuration
    state: present
    data_src: "{{ registry_volume }}/config.yml"
  when: inventory_hostname is in groups['swarm-managers']

- name: Create registry cache configuration
  community.docker.docker_config:
    name: registry_cache_configuration
    state: present
    data_src: "{{ registry_cache }}/config.yml"
  when: inventory_hostname is in groups['swarm-managers']

- name: Install apache2-utils in both nodes
  ansible.builtin.apt:
    name: apache2-utils
    state: present
  #when: inventory_hostname is in groups['nfs-servers']

- name: Create htpasswd file
  ansible.builtin.command: htpasswd -Bc /data/docker-registry/htpasswd {{ secrets.registry_username }}
  args:
    creates: /data/docker-registry/htpasswd
  become: true
  when: inventory_hostname is in groups['swarm-managers']

- name: Install passlib with pip
  ansible.builtin.pip:
    name: passlib
    state: present
    executable: pip3
  become: true

- name: Set password for htpasswd
  ansible.builtin.htpasswd:
    path: /data/docker-registry/htpasswd
    name: "{{ secrets.registry_username }}"
    password: "{{ secrets.registry_password }}"
    #encrypt: sha1
  become: true
  when: inventory_hostname is in groups['swarm-managers']

- name: Create registry service
  community.docker.docker_swarm_service:
    name: registry
    configs:
      - config_name: registry_configuration
        filename: config.yml
    state: present
    image: "{{ registry_image }}"
    mounts:
    - target: "/var/lib/registry"
      source:  "{{ registry_volume }}"
      type: bind
    publish:
      - published_port: "{{ registry_port }}"
        target_port: "{{ registry_port }}"
    #replicas: 2
  when: inventory_hostname is in groups['swarm-managers']

- name: Create registry-cache service
  community.docker.docker_swarm_service:
    name: registry-cache
    configs:
    - config_name: registry_cache_configuration
      filename: config_cache.yml
    state: present
    image: "{{ registry_image }}"
    mounts:
    - target: "/var/lib/registry-cache"
      source: "{{ registry_cache }}"
      type: bind
    publish:
      - published_port: "{{ registry_cache_port }}"
        target_port: "{{ registry_cache_port }}"
    #replicas: 2
  when: inventory_hostname is in groups['swarm-managers']

- name: Reload Docker daemon
  systemd:
    name: docker
    state: reloaded
    daemon_reload: yes

- name: Wait for registry service to be up
  ansible.builtin.wait_for:
    port: 5000
    state: started
    host: "{{ registry_hostmanager }}"
  timeout: 300

# try to understand better the login part
- name: Login to the registry
  community.docker.docker_login:
    username: "{{ secrets.registry_username }}"
    password: "{{ secrets.registry_password }}"
    registry_url: 'http://{{ registry_localhost }}:{{ registry_port }}'
