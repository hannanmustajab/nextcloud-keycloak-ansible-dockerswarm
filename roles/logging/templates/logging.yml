version: '3'

configs:
  fluent-bit-conf:
    file: /opt/fluent-bit.conf
  loki-conf:
    file: /opt/loki.conf

volumes:
  data: {}

networks:
  overlay_swarm_net:
    name: overlay_swarm_net
    external: true
  
  traefik_public:
    external: true 


services:
  loki:
    image: grafana/loki:2.7.1
    command: >-
      -config.file=/etc/loki/local-config.yaml
      -boltdb.shipper.compactor.ring.instance-addr=127.0.0.1
      -distributor.ring.instance-addr=127.0.0.1
      -frontend.instance-addr=127.0.0.1
      # -frontend.address=127.0.0.1
      -index-gateway.ring.instance-addr=127.0.0.1
      -ingester.lifecycler.addr=127.0.0.1
      -query-scheduler.ring.instance-addr=127.0.0.1
      -ruler.ring.instance-addr=127.0.0.1
      -common.instance_interface_names="lo"
      -common.ring.instance_interface_names="lo"
      -server.grpc_listen_port=9096
    ports:
      - 3100:3100
    volumes:
      - data:/loki
    networks:
      - overlay_swarm_net
    
  fluent-bit:
    image: cr.fluentbit.io/fluent/fluent-bit:2.0.6
    deploy:
      mode: global
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    configs:
      - source: fluent-bit-conf
        target: /fluent-bit/etc/fluent-bit.conf
    networks:
      - overlay_swarm_net
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /sys/fs/cgroup/:/sys/fs/cgroup/
      # - /opt/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    depends_on:
      - loki

  cadvisor:
    image: google/cadvisor:v0.33.0
    ports:
      - 9092:9092    
    deploy:
      mode: global
    networks:
      - overlay_swarm_net
    volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:ro
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro


  prometheus:
    image: prom/prometheus:v2.40.6
    deploy:
      mode: replicated
      replicas: 1
    ports:
        - "9090:9090"
    networks:
      - overlay_swarm_net
    volumes:
        - /data/prometheus:/app.cfg
        - /data/prometheus:/prometheus
    command: >-
        --config.file=/app.cfg/prometheus.yml
        --storage.tsdb.path=/prometheus
        --storage.tsdb.retention.time=7d
        --web.console.libraries=/usr/share/prometheus/console_libraries
        --web.console.templates=/usr/share/prometheus/consoles

  node-exporter:
    image: prom/node-exporter:v1.3.1
    deploy:
      mode: replicated
      replicas: 2
    restart: always
    networks:
      - overlay_swarm_net
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'

  grafana:
    depends_on:
        - loki
    image: grafana/grafana:8.5.0
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.grafana.entrypoints=websecure
        - traefik.http.routers.grafana.rule=Host(`mon.localdomain`)
        - traefik.http.routers.grafana.tls=true
        - traefik.http.routers.grafana.service=grafana  
        - traefik.http.services.grafana.loadbalancer.server.port=3000
      mode: replicated
      replicas: 1
    container_name: grafana
    ports:
      - '3000:3000'
    environment:
        GF_SECURITY_ADMIN_USER: admin
        GF_SECURITY_ADMIN_PASSWORD: test
        GF_PATHS_PROVISIONING: '/conf/provisioning'
    networks:
      - overlay_swarm_net
      - traefik_public

    volumes:
        - /data/grafana:/conf/provisioning/
        - /data/grafana/dashboards/application:/usr/share/grafana/public/dashboards/